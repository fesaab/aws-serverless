name: Production CI/CD Pipeline

concurrency: production

on:
  push:
    branches: [ "main" ]

env:
  NODE_VERSION: 16.x

jobs:
  # 1 => Build and test the source codes
  build:
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: lambda/product-handler
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'lambda/product-handler/package-lock.json'
        
      - name: Install dependencies
        run: npm ci
      
      - name: Compile code
        run: npm run compile
      
      - name: Run tests
        run: npm run test

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda-code
          path: lambda/product-handler/build
          retention-days: 5

  
  # 2 => Deploy the updates
  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    defaults:
      run:
        working-directory: cdk
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Download lambda code from ci
        uses: actions/download-artifact@v3
        with:
          name: lambda-code
          path: lambda/product-handler/build

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'cdk/package-lock.json'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'us-east-1'
        
      - name: Install dependencies
        run: npm ci
      
      - name: Synthesize CloudFormation template
        run: npm run cdk synth

      - name: Bootstrap CDK
        run: npm run cdk bootstrap

      - name: Deploy
        run: npm run cdk deploy -- --all --require-approval never